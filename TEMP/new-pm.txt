
X11 - X Window System 
The X Window System (X11, X, and sometimes informally X-Windows) is a [windowing system] for bitmap displays, common on [UNIX-like] computer operating systems.

X provides the basic framework for a [GUI] environment: drawing and moving windows on the display device and interacting with a mouse and keyboard. X does not mandate the user interface â€” this is handled by individual programs. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.

X originated at the Massachusetts Institute of Technology (MIT) in 1984. The protocol version has been X11 since September 1987. The X.Org Foundation leads the X project, with the current reference implementation, X.Org Server, available as free and open source software under the MIT License and similar permissive licenses.

X is an architecture-independent system for remote graphical user interfaces and input device capabilities. Each person using a networked terminal has the ability to interact with the display with any type of user input device.

In its standard distribution it is a complete, albeit simple, display and interface solution which delivers a standard toolkit and protocol stack for building graphical user interfaces on most Unix-like operating systems and [OpenVMS], and has been ported to many other contemporary general purpose operating systems.

X provides the basic framework, or primitives, for building such GUI environments: drawing and moving windows on the display and interacting with a mouse, keyboard or touchscreen. X does not mandate the user interface; individual client programs handle this. Programs may use X's graphical abilities with no user interface. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.

Unlike most earlier display protocols, X was specifically designed to be used over network connections rather than on an integral or attached display device. X features network transparency: the machine where an application program (the client application) runs can differ from the user's local machine (the display server). X's network protocol is based on X command primitives. This approach allows both 2D and 3D operations to be fully accelerated on the remote X server.

X provides no native support for audio; several projects exist to fill this niche, some also providing transparent network support.

Principles of X
In 1984, Bob Scheifler and Jim Gettys set out the early principles of X:

- Do not add new functionality unless an implementor cannot complete a real application without it.
- It is as important to decide what a system is not as to decide what it is. Do not serve all the world's needs; rather, make the system extensible so that additional needs can be met in an upwardly compatible fashion.
- The only thing worse than generalizing from one example is generalizing from no examples at all.
- If a problem is not completely understood, it is probably best to provide no solution at all.
- If you can get 90 percent of the desired effect for 10 percent of the work, use the simpler solution.
- Isolate complexity as much as possible.
- Provide mechanism rather than policy. In particular, place user interface policy in the clients' hands.

The first principle was modified during the design of X11 to: "Do not add new functionality unless you know of some real application that will require it."

X has largely kept to these principles. The sample implementation is developed with a view to extension and improvement of the implementation, while remaining compatible with the original 1987 protocol.
===

Window System
In computing, a windowing system (or window system) is a type of [graphical user interface] (GUI) which implements the [WIMP] (windows, icons, menus, pointer) paradigm for a user interface. Each currently running application is assigned a usually resizable and usually rectangular shaped surface of the display to present its graphical user interface to the user; these windows may overlap each other, as opposed to a tiling interface where they are not allowed to overlap. Usually a window decoration is drawn around each window. The programming of both the window decoration and of available widgets inside of the window, which are graphical elements for direct user interaction, such as sliders, buttons, etc., is eased and simplified through the use of widget toolkits.
===

BSD - Berkeley Software Distribution
Berkeley Software Distribution (BSD) was a [Unix] [operating system] derivative developed and distributed by the Computer Systems Research Group (CSRG) of the University of California, Berkeley, from 1977 to 1995. Today the term "BSD" is often used non-specifically to refer to any of the BSD descendants which together form a branch of the family of [Unix-like] operating systems. Operating systems derived from the original BSD code remain actively developed and widely used.

Historically, BSD has been considered a branch of Unix, Berkeley Unix, because it shared the initial codebase and design with the original AT&amp;T Unix operating system. In the 1980s, BSD was widely adopted by vendors of workstation-class systems in the form of proprietary Unix variants such as [DEC ULTRIX] and [Sun Microsystems SunOS]. This can be attributed to the ease with which it could be licensed, and the familiarity the founders of many technology companies of the time had with it.

Although these proprietary BSD derivatives were largely superseded by the UNIX System V Release 4 and OSF/1 systems in the 1990s (both of which incorporated BSD code and are the basis of other modern Unix systems), later BSD releases provided a basis for several open source development projects, e.g. [FreeBSD], OpenBSD, NetBSD, [Darwin] or PC-BSD, that are ongoing. These, in turn, have been incorporated in whole or in part in modern proprietary operating systems, e.g. the [TCP/IP]  networking code in [Microsoft Windows] and most of the foundation of Apple's [OS X] and [iOS].
===

Common Desktop Environment (CDE)
The Common Desktop Environment (CDE) is a desktop environment for [Unix] and [OpenVMS], based on the [Motif widget toolkit]. It was part of the UNIX98 Workstation Product Standard, and was long the "classic" [Unix] desktop associated with commercial Unix workstations.

After a long history as proprietary software, CDE was released as free software on 6 August 2012, under the GNU Lesser General Public License, version 2 or later. Since its release as free software, CDE has been ported to [Linux] and [BSD] derivatives.
===

GNOME
GNOME is a desktop environment which is composed entirely of free and open-source software. Its target operating system is [Linux], but it is also supported on most derivatives of [BSD].

GNOME is developed by The GNOME Project, which is composed of both volunteers and paid contributors, the largest corporate contributor being [Red Hat]. It is an international project that aims to develop software frameworks for the development of software, to program end-user applications based on these frameworks, and to coordinate efforts for internationalisation and localisation and accessibility of that software.

GNOME 2
GNOME 2 was very similar to a conventional desktop interface, featuring a simple desktop in which users could interact with virtual objects, such as windows, icons, and files. GNOME 2 used Metacity as its default window manager. The handling of windows, applications, and files in GNOME 2 is similar to that of contemporary desktop operating systems. In the default configuration of GNOME 2, the desktop has a launcher menu for quick access to installed programs and file locations; open windows may be accessed by a taskbar along the bottom of the screen, and the top-right corner features a notification area for programs to display notices while running in the background. However, these features can be moved to almost any position or orientation the user desires, replaced with other functions or removed altogether.

GNOME 3
Before GNOME 3, GNOME used the traditional desktop metaphor, but in GNOME 3 this was replaced with GNOME Shell, a more abstract metaphor where switching between different tasks and virtual workspaces takes place in a separate area called Overview. Also, since Mutter replaced Metacity as the default window manager, the minimize and maximize buttons no longer appear on the titlebar by default. Adwaita replaced Clearlooks as the default theme. Many GNOME Core Applications also went through redesigns to provide a more consistent user experience.

These major changes initially evoked widespread criticism. The MATE desktop environment forked from the GNOME 2 codebase with the intent of retaining the traditional GNOME 2 interface while keeping it compatible with modern Linux technology, such as [GTK+] 3. The Linux Mint team addressed the issue in another way by developing the "Mint GNOME Shell Extensions," extensions that ran on top of GNOME 3. These extensions allowed GNOME 3 to be used via the traditional desktop metaphor. This eventually led to the creation of the Cinnamon user interface, which was forked from the GNOME 3 codebase.

As of 2015, critical reception is much more positive. [Debian], a Linux distribution that had historically used GNOME 2, switched to [XFCE] when GNOME 3 was released. However, Debian developers are planning to switch back to GNOME 3 with their next release. [Linus Torvalds], the creator of the Linux kernel, switched back to GNOME 3 in 2013.
===

DE Software Compilation (KDE SC)
The KDE Software Compilation (KDE SC) is a desktop environment and an associated range of KDE Applications produced by [KDE]. Prior to version 4.4, released in February 2010, the Software Compilation was known as KDE, which stood for K Desktop Environment until November 2009. The KDE SC includes only applications whose development teams choose to follow the Software Compilation's release schedule; as a result, many popular KDE applications, such as Amarok and Digikam, are not part of the Software Compilation. To date there have been five series of releases.

KDE was founded in 1996 by Matthias Ettrich, who was then a student at the Eberhard Karls University of TÃ¼bingen. At the time, he was troubled by certain aspects of the [Unix] desktop. Among his qualms was that none of the applications looked, felt, or worked alike. He proposed the formation of not only a set of applications, but, rather, a desktop environment, in which users could expect things to look, feel, and work consistently. He also wanted to make this desktop easy to use; one of his complaints with desktop applications of the time was that his girlfriend could not use them. His initial Usenet post spurred a lot of interest, and the KDE project was born.

Ettrich chose to use Trolltechâ€™s [Qt] framework for the KDE project. Other programmers quickly started developing KDE/Qt applications, and by early 1997, a few applications were being released.
===

Xfce
Xfce (pronounced as four individual letters) is a free software desktop environment for [Unix] and [Unix-like] platforms, such as [Linux], [Solaris], and [BSD]. It aims to be fast and lightweight, while still being visually appealing and easy to use. It consists of separately packaged parts that together provide the full functionality of the desktop environment, but can be selected in subsets to suit user needs and preference.

Olivier Fourdan started the project in 1996. The name "Xfce" originally stood for "XForms Common Environment", but since that time Xfce has been rewritten twice and no longer uses the XForms toolkit. The name survived, but it is no longer capitalised as "XFCE", but rather as "Xfce". The developers' current stance is that the initialism no longer stands for anything specific. It has been nicknamed "Cholesterol Free Desktop Environment", even in some of its man pages.
===

GTK+
GTK+ (previously GIMP Toolkit, sometimes incorrectly referred to as the GNOME Toolkit) is a cross-platform widget toolkit for creating [graphical user interfaces]. It is licensed under the terms of the LGPL, allowing both free and proprietary software to use it. It is one of the most popular toolkits for the Wayland and [X11] windowing systems, along with [Qt].

===

Qt
Qt ("cute") is a cross-platform application framework that is widely used for developing application software that can be run on various software and hardware platforms with little or no change in the underlying codebase, while having the power and speed of native applications. Qt is currently being developed both by the Qt Company, a subsidiary of Digia, and the Qt Project under open-source governance, involving individual developers and firms working to advance Qt. Digia owns the Qt trademark and copyright. Qt is available with both commercial and open source GPL v3, LGPL v3[7] and LGPL v2 licenses.
===

DESQview
DESQview (DV) was a text mode multitasking operating environment developed by Quarterdeck Office Systems which enjoyed modest popularity in the late 1980s and early 1990s. Running on top of [DOS], it allowed users to run multiple DOS programs concurrently in multiple windows.

Quarterdeck's predecessor to DESQview was a task switching product called Desq (shipped late April or May 1984) which allowed users to switch between running programs. Quarterdeck revamped its package, bringing multitasking in, and adding TopView compatibility.

DESQview was released in July 1985, four months before [Microsoft] introduced the first version of [Windows]. It was widely thought to be the first program to bring multitasking and windowing capabilities to DOS, but in fact there was a predecessor, [IBM]'s [TopView], shipped March 1985, from which DESQview inherited the pop-up menu.

Under DESQview, well behaved DOS programs could be run concurrently in resizable, overlapping windows (something the first version of [MS Windows] could not do). A simple hide able menu allowed cutting and pasting between programs. DESQview provided support for simple editable macros as well. Quarterdeck also developed a set of optional utilities for DESQview, including a notepad and dialer. Later versions allowed graphics mode programs to be loaded as well, but only run in full screen mode.

DESQview was not a [GUI] (Graphical User Interface) operating system. Rather, it was a non-graphical, windowed shell that ran in real mode on top of DOS, although it could run on any [Intel 8086] or [Intel 80286] based [PC]. It could also use expanded memory add-ons to work around the 640KB RAM limit of conventional memory on early PCs. DESQview really came into its own on [Intel 80386] machines, which were better at utilising memory above DOS's limit. However, in either case, it ran in real mode rather than protected mode, meaning that a misbehaving program could still crash the system.

To make maximum use of [extended memory] on Intel 80386 processors, by transforming it into [expanded memory] and [upper memory blocks] (UMBs) accessible to DESQview and other real-mode programs, Quarterdeck developed a sophisticated memory manager. Owing to the foresight of its marketing manager, Quarterdeck marketed it as a separate product, [QEMM-386] (Quarterdeck Expanded Memory Manager 386). It became more popular than DESQview itself, and sold steadily for many years, generating over US$150 million in sales from 1987 through 1994. After the release of the Intel Pentium processor, the 386 in QEMM was dropped. The combination package of DESQview and QEMM-386 was called DESQview 386 (DV386).

With the introduction of the 80386, the memory management features were enhanced to allow the system to be shifted into protected mode but also allowing the addresses to be configured in a virtual 8086 mode so that the extended memory could be mapped into addressing frames and accessible to real-mode programs such as [MS-DOS]. This allowed a 386 to implement the LIM (Lotus, Intel, Microsoft) EMS (expanded memory specification). The memory manager was easily controlled by the user with DOS program QEMM.COM.

DESQview was able to use QEMM's features far beyond just the LIM EMS API, mapping most of the "conventional" address space (below 640 KB) into multiple extended memory blocks such that each could execute transparently during its context. The main copy of DOS and any device and networking drivers had to be loaded before DESQview. The resulting space was the largest single program that could run, but DESQview under QEMM could run as many instances of those programs as the EMS would allow. So an 8MB system could generally have a dozen full-sized MS-DOS programs running concurrently; a 16MB system could run over twenty, and so on.
===

Quarterdeck Expanded Memory Manager (QEMM)
Quarterdeck Expanded Memory Manager (QEMM) is a memory manager produced by Quarterdeck Office Systems in the late 1980s through late 1990s. It was the most popular third party memory manager for the [MS-DOS] and other [DOS] operating systems.
===

