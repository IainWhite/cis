<div class="row">
    <div class="col-lg-12 col-md-12">
        <?php echo $this->stencil->setHeadline('Software Bloat'); ?>
        <?php echo $this->stencil->addImage('Swish Army Everything', 'jpg', 'left'); ?>
        <p><strong>Software bloat</strong> is a process whereby successive versions of a computer program become perceptibly slower, use more memory, disk space or processing power, or have higher hardware requirements than the previous version whilst making only dubious user perceptible improvements or suffering from <?php echo $this->stencil->addLink('feature creep', 'PM'); ?>. The term is not applied consistently; it is often used as a pejorative by end users (<em>bloatware</em>) to describe undesired user interface changes even if those changes had little or no effect on the hardware requirements. In long-lived software, perceived bloat can occur from the software servicing a large, diverse marketplace with many differing requirements. Most end users will feel they only need some limited subset of the available functions and will regard the others as unnecessary bloat, even if people with different requirements do use them.</p>
        <p></p>Actual (measurable) bloat can occur due to de-emphasising software efficiency in favour of other concerns like developer productivity, or possibly through the introduction of new layers of abstraction like a virtual machine or other scripting engine for the purposes of convenience when developer constraints are reduced. The perception of improved developer productivity, in the case of practising development within virtual machine environments, comes from the developers no longer taking resource constraints and usage into consideration during design and development; this allows the product to be completed faster but it results in increases to the end user's hardware requirements to compensate.</p>
    </div>
</div>