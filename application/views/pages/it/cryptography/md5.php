<div class="row">
    <div class="col-lg-12 col-md-12">
        <?php echo $this->stencil->setHeadline('MD5'); ?>
        <p>The <strong>MD5</strong> message-digest algorithm is a widely used cryptographic hash function producing a 128-bit (16-byte) hash value, typically expressed in text format as a 32 digit hexadecimal number. MD5 has been utilised in a wide variety of cryptographic applications, and is also commonly used to verify data integrity.</p>
        <p>MD5 was designed by <strong>Ronald Rivest</strong> in 1991 to replace an earlier hash function, <?php echo $this->stencil->addLink('MD4', 'IT'); ?>. The source code in <?php echo $this->stencil->addRFCLink('1321'); ?> contains a "by attribution" RSA license.</p>
        <p>In 1996 a flaw was found in the design of MD5. While it was not deemed a fatal weakness at the time, cryptographers began recommending the use of other algorithms, such as <?php echo $this->stencil->addLink('SHA-1', 'IT'); ?> which has since been found to be vulnerable as well. In 2004 it was shown that MD5 is not collision resistant. As such, MD5 is not suitable for applications like <?php echo $this->stencil->addLink('SSL certificates', 'WD'); ?> or digital signatures that rely on this property for digital security. Also in 2004 more serious flaws were discovered in MD5, making further use of the algorithm for security purposes questionable; specifically, a group of researchers described how to create a pair of files that share the same MD5 checksum. Further advances were made in breaking MD5 in 2005, 2006, and 2007. In December 2008, a group of researchers used this technique to fake SSL certificate validity. As of 2010, the CMU Software Engineering Institute considers MD5 "<strong><em>cryptographically broken and unsuitable for further use</em></strong>", and most U.S. government applications now require the <?php echo $this->stencil->addLink('SHA-2', 'IT'); ?> family of hash functions. In 2012, the <strong>Flame</strong> malware exploited the weaknesses in MD5 to fake a <?php echo $this->stencil->addLink('Microsoft', 'C'); ?> digital signature.</p>
    </div>
</div>