<div class="row">
    <div class="col-lg-12 col-md-12">
        <?php echo $this->stencil->setHeadline('VAXcluster / VMScluster'); ?>
        <p>A <strong>VMScluster</strong> is a computer cluster involving a group of computers running the <?php echo $this->stencil->addLink('OpenVMS', 'OS'); ?>  operating system. Whereas tightly coupled multiprocessor systems run a single copy of the operating system, a VMScluster is loosely coupled: each machine runs its own copy of OpenVMS, but the disk storage, lock manager, and security domain are all cluster-wide. Machines can join or leave a VMScluster without affecting the rest of the cluster. For enhanced availability, VMSclusters support the use of dual-ported disks connected to two machines or storage controllers simultaneously. With OpenVMS now ported to Alpha and IA-64 machines, the facility originally named <strong>VAXclustering</strong> was renamed to VMSclustering.</p>
        <p><?php echo $this->stencil->addLink('Digital Equipment Corporation', 'C'); ?> first announced VAXclusters in May 1983. At this stage, clustering required specialised communications hardware, as well as some major changes to low-level subsystems in <?php echo $this->stencil->addLink('VMS', 'OS'); ?>. The software and hardware were designed jointly.</p>
        <p>At the center of each cluster was a star coupler, to which every node (computer) and data storage device in the cluster was connected by one or two pairs of CI cables. ("CI" stands for Computer Interconnect) Each pair of cables had a transmission rate of 70 megabits per second, a high speed for that era. Using two pairs gave an aggregate transmission rate of 140 megabits per second, with redundancy in case one cable failed; the star couplers also had redundant wiring for better availability.</p>
        <p>Each CI cable connected to its computer via a CI Port, which could send and receive packets without any <?php echo $this->stencil->addLink('CPU', 'IT'); ?> involvement. To send a packet, a CPU had only to create a small data structure in memory and append it to a "send" queue; similarly, the CI Port would append each incoming message to a "receive" queue. Tests showed that a VAX-11/780 could send and receive 3000 messages per second, even though it was nominally a 1-MIPS machine. The closely related <strong>Mass Storage Control Protocol (MSCP)</strong> allowed similarly high performance from the mass storage subsystem. In addition, MSCP packets were very easily transported over the CI allowing remote access to storage devices.</p>
        <p>VAXclustering was the first clustering system to achieve commercial success, and was a major selling point for <?php echo $this->stencil->addLink('VAX', 'ITH'); ?> systems.</p>
    </div>
</div>