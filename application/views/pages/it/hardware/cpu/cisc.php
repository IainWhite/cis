<div class="row">
    <div class="col-lg-12 col-md-12">
        <?php echo $this->stencil->setHeadline('CISC - Complex Instruction Set Computing'); ?>
        <p><strong>Complex Instruction Set Computing (CISC)</strong> is a processor design where single instructions can execute several low-level operations (such as a load from memory, an arithmetic operation, and a memory store) or are capable of multi-step operations or addressing modes within single instructions. The term was retroactively coined in contrast to <strong>Reduced Instruction Set Computer (<?php echo $this->stencil->addLink('RISC', 'CPU'); ?>)</strong> and has therefore become something of an umbrella term for everything that is not RISC, i.e. everything from large and complex mainframes to simplistic microcontrollers where memory load and store operations are not separated from arithmetic instructions.</p>
        <p>A modern RISC processor can therefore be much more complex than, say, a modern microcontroller using a CISC labeled instruction set, especially in terms of implementation (electronic circuit complexity), but also in terms of the number of instructions or the complexity of their encoding patterns. The only differentiating characteristic (nearly) "guaranteed" is the fact that most RISC designs use uniform instruction length for (almost) all instructions and employ strictly separate load / store instructions.</p>
        <p>Examples of instruction set architectures that have been retroactively labeled CISC are <strong>System/360</strong> through <strong>z/Architecture</strong>, the <strong>PDP-11</strong> and <?php echo $this->stencil->addLink('VAX', 'ITH'); ?> architectures, <strong>Data General Nova</strong> and many others. Well known microprocessors and microcontrollers that have also been labeled CISC in many academic publications include the <?php echo $this->stencil->addLink('Motorola', 'C'); ?> 6800, 6809 and <?php echo $this->stencil->addLink('68000', 'CPU'); ?> families; the <?php echo $this->stencil->addLink('Intel 8080', 'CPU'); ?>, <strong>iAPX432</strong> and <?php echo $this->stencil->addLink('x86 family', 'CPU'); ?>; the <?php echo $this->stencil->addLink('Ziglog Z80', 'CPU'); ?>, <strong>Z8</strong> and <strong>Z8000</strong> families; the <?php echo $this->stencil->addLink('National Semiconductor 32016', 'CPU'); ?> and NS320xx line; the <?php echo $this->stencil->addLink('MOS Technology 6502', 'CPU'); ?> family; the <strong>Intel 8051</strong> family; and others.</p>
        <p>Some designs have been regarded as borderline cases by some writers. For instance, the <strong>Microchip Technology PIC</strong> has been labeled RISC in some circles and CISC in others and the 6502 and 6809 have both been described as "RISC like", although they have complex addressing modes as well as arithmetic instructions that access memory, contrary to the RISC principles.</p>
    </div>
</div>