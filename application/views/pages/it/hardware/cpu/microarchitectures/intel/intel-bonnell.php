<div class="row">
    <div class="col-lg-12 col-md-12">
        <?php echo $this->stencil->setHeadline('Intel Bonnell Microarchitecture'); ?>
        <p><strong>Bonnell</srtrong> is a CPU microarchitecture used by <?php echo $this->stencil->addLink('Intel Atom', 'CPU'); ?> processors which can execute up to two instructions per cycle. Like many other <?php echo $this->stencil->addLink('x86 microprocessors', 'CPU'); ?>, it translates x86 instructions (CISC instructions) into simpler internal operations (sometimes referred to as micro-ops, effectively RISC style instructions) prior to execution. The majority of instructions produce one micro-op when translated, with around 4% of instructions used in typical programs producing multiple micro-ops. The number of instructions that produce more than one micro-op is significantly fewer than the P6 and NetBurst microarchitectures. In the <?php echo $this->stencil->addLink('Bonnell', 'CPU'); ?> microarchitecture, internal micro-ops can contain both a memory load and a memory store in connection with an ALU operation, thus being more similar to the x86 level and more powerful than the micro-ops used in previous designs. This enables relatively good performance with only two integer ALUs, and without any instruction reordering, speculative execution or register renaming. The Bonnell microarchitecture therefore represents a partial revival of the principles used in earlier Intel designs such as <?php echo $this->stencil->addLink('P5', 'CPU'); ?> and the <?php echo $this->stencil->addLink('i486', 'CPU'); ?>, with the sole purpose of enhancing the performance per watt ratio. However, Hyper-Threading is implemented in an easy (i.e. low-power) way to employ the whole pipeline efficiently by avoiding the typical single thread dependencies.</p>
    </div>
</div>